generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String       @id @default(uuid())
  username      String       @unique
  email         String       @unique
  passwordHash  String
  sessions      Session[]
  tickets       Ticket[]
  comments      Comment[]
}

model Session {
  id        String       @id
  userId    String
  expiresAt DateTime
  user      User @relation(fields: [userId], references: [id], onDelete: Cascade)  

  @@index([userId])
}

model Ticket {
  id        String       @id @default(uuid())
  title     String
  content   String       @db.VarChar(1024)
  status    TicketStatus @default(OPEN)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  deadline  String      
  bounty    Int
  userId    String
  user      User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments  Comment[]

  @@index([userId])
}

model Comment {
  id        String       @id @default(uuid())
  content   String       @db.VarChar(1024)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  ticketId  String
  ticket    Ticket       @relation(fields: [ticketId], references: [id], onDelete: Cascade)
  userId    String?
  user      User?        @relation(fields: [userId], references: [id], onDelete: SetNull)

  @@index([ticketId])
  @@index([userId])
}

enum TicketStatus {
  OPEN
  IN_PROGRESS
  DONE
}
